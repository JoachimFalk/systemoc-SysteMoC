#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT(SysteMoC, 0.1, falk@cs.fau.de)
AC_PREREQ(2.57)
ACJF_INIT

AC_CONFIG_SRCDIR([SystemC-Examples.txt])

AC_CONFIG_AUX_DIR([../BuildSystem])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST

dnl Checks for programs.
ACJF_CHECK_CROSSTOOL( CC, gcc)
ACJF_CHECK_CROSSTOOL( CXX, g++)
ACJF_CHECK_CROSSTOOL( AR, ar)
ACJF_CHECK_CROSSTOOL( RANLIB, ranlib)
ACJF_CHECK_CROSSTOOL( NM, nm)
AC_PROG_CXXCPP
AC_PROG_CPP
# Checks for programs.
#AC_PROG_LIBTOOL
#AC_PROG_INSTALL
#AC_PROG_LN_S
#AC_PROG_MAKE_SET

ACJF_ARG_DEBUG([yes], [], [-DNDEBUG])

AC_ARG_ENABLE(synthesis-support,
  [  --enable-synthesis-support     Turn on Support for synth target in selected examples],
  [case "${enableval}" in
    yes) synth=true ;;
    no)  synth=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-synthesis-support) ;;
   esac],
  [synth=false])
AM_CONDITIONAL(SYNTH, test x$synth = xtrue)

AM_INIT_AUTOMAKE
AC_CONFIG_HEADER([config.h])

AC_DISABLE_SHARED
AM_PROG_LIBTOOL

dnl check for exe extension
AC_EXEEXT

# Checks for header files.
# AC_FUNC_ALLOCA
# AC_HEADER_STDC
# AC_CHECK_HEADERS([OS.h fcntl.h limits.h mach/mach.h malloc.h stddef.h stdint.h stdlib.h string.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

ACJF_CHECK_LIB_SYSTEMC
ACJF_CHECK_LIB_BOOST
ACJF_NEED_PKG([Support])

SYSTEMC_VPC_INCLUDE=""
SYSTEMC_VPC_LDFLAGS=""
SYSTEMC_VPC_DEPENDENCIES=""

AC_SUBST([SYSTEMC_VPC_INCLUDE])
AC_SUBST([SYSTEMC_VPC_LDFLAGS])
AC_SUBST([SYSTEMC_VPC_DEPENDENCIES])

### SysteMoC ###
SYSTEMOC_INCLUDE=" \
  -I\$(top_builddir)/../SysteMoC/include/systemoc \
  $SYSTEMC_INCLUDE $BOOST_INCLUDE"
AC_SUBST([SYSTEMOC_INCLUDE])

SYSTEMOC_LDFLAGS=" \
  -L\$(top_builddir)/../SysteMoC \
  $SYSTEMC_LDFLAGS $BOOST_LDFLAGS"
AC_SUBST([SYSTEMOC_LDFLAGS])

SYSTEMOC_DEPENDENCIES=" \
  \$(top_builddir)/../SysteMoC/libsystemoc.la"
AC_SUBST([SYSTEMOC_DEPENDENCIES])

AC_CONFIG_FILES([Makefile])

if test -d $srcdir/idct2d-ref; then
  AC_CONFIG_FILES([idct2d-ref/Makefile])
  subdirs="$subdirs idct2d-ref"
fi
if test -d $srcdir/systemc-idct; then
  AC_CONFIG_FILES([systemc-idct/Makefile])
# subdirs="$subdirs systemc-idct"
fi
if test -d $srcdir/systemoc-idct2d; then
  AC_CONFIG_FILES([systemoc-idct2d/Makefile])
  subdirs="$subdirs systemoc-idct2d"
fi
if test -d $srcdir/systemoc-sdf; then
  AC_CONFIG_FILES([systemoc-sdf/Makefile])
  subdirs="$subdirs systemoc-sdf"
fi
if test -d $srcdir/systemoc-sqr; then
  AC_CONFIG_FILES([systemoc-sqr/Makefile])
  subdirs="$subdirs systemoc-sqr"
fi
if test -d $srcdir/systemoc-par; then
  AC_CONFIG_FILES([systemoc-par/Makefile])
  subdirs="$subdirs systemoc-par"
fi    
if test -d $srcdir/systemoc-sqr-double; then
  AC_CONFIG_FILES([systemoc-sqr-double/Makefile])
  subdirs="$subdirs systemoc-sqr-double"
fi
if test -d $srcdir/systemoc-fir; then
  AC_CONFIG_FILES([systemoc-fir/Makefile])
  subdirs="$subdirs systemoc-fir"
fi
if test -d $srcdir/systemoc-src-snk; then
  AC_CONFIG_FILES([systemoc-src-snk/Makefile])
  subdirs="$subdirs systemoc-src-snk"
fi
if test -d $srcdir/systemoc-src-snk-noconsume; then
  AC_CONFIG_FILES([systemoc-src-snk-noconsume/Makefile])
  subdirs="$subdirs systemoc-src-snk-noconsume"
fi
if test -d $srcdir/systemoc-select; then
  AC_CONFIG_FILES([systemoc-select/Makefile])
  subdirs="$subdirs systemoc-select"
fi

SUBDIRS=$subdirs
AC_SUBST(SUBDIRS)

ACJF_DONE

AC_OUTPUT
