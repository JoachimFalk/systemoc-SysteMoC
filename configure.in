#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT(SysteMoC, 0.1, falk@cs.fau.de)
AC_PREREQ(2.57)
ACJF_INIT

AC_CONFIG_SRCDIR([SystemC-Examples.txt])

AC_CONFIG_AUX_DIR([../BuildSystem])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST

dnl Checks for programs.
ACJF_CHECK_CROSSTOOL( CC, gcc)
ACJF_CHECK_CROSSTOOL( AR, ar)
ACJF_CHECK_CROSSTOOL( RANLIB, ranlib)
ACJF_CHECK_CROSSTOOL( NM, nm)
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_CPP
# Checks for programs.
#AC_PROG_LIBTOOL
#AC_PROG_INSTALL
#AC_PROG_LN_S
#AC_PROG_MAKE_SET

AM_INIT_AUTOMAKE

ACJF_ARG_DEBUG([yes], [], [-DNDEBUG])

### SystemC-VPC ###
# --enable-vpc option
AC_ARG_ENABLE(
  [vpc],
  [[  --enable-vpc            enable vpc support for SysteMoC [default=yes]]],
  [case "$enableval" in
     yes) enable_vpc=yes ;;
     no)  enable_vpc=no  ;;
     *)   enable_vpc=no  ;;
   esac],
  [enable_vpc=yes # default]
)

AC_CONFIG_HEADER([config.h])

AC_DISABLE_SHARED
AM_PROG_LIBTOOL

dnl check for exe extension
AC_EXEEXT

ACJF_CHECK_LIB_SYSTEMC
AM_CPPFLAGS="$AM_CPPFLAGS $SYSTEMC_INCLUDE"
AM_LDFLAGS="$AM_LDFLAGS   $SYSTEMC_LDFLAGS"

ACJF_CHECK_LIB_BOOST
AM_CPPFLAGS="$AM_CPPFLAGS $BOOST_INCLUDE"
AM_LDFLAGS="$AM_LDFLAGS   $BOOST_LDFLAGS"

ACJF_NEED_PKG([Support])
ACJF_NEED_PKG([SysteMoC],
  [if test -d "$srcdir/$acjf_pkgdir/pkginclude"; then
     AM_CPPFLAGS="$AM_CPPFLAGS -I$acjf_pkg_srcdir/pkginclude/systemoc";
   else
     AM_CPPFLAGS="$AM_CPPFLAGS -I$acjf_pkg_builddir/include/systemoc";
   fi
   AM_LDFLAGS="$AM_LDFLAGS -L$acjf_pkg_builddir";
   SYSTEMOC_DEPENDENCIES="$acjf_pkg_builddir/libsystemoc.la";]
)
AC_SUBST([SYSTEMOC_DEPENDENCIES])
# Backward compatibility cruft
SYSTEMOC_INCLUDE=""
AC_SUBST([SYSTEMOC_INCLUDE])
SYSTEMOC_LDFLAGS=""
AC_SUBST([SYSTEMOC_LDFLAGS])


# Checks for header files.
# AC_FUNC_ALLOCA
# AC_HEADER_STDC
# AC_CHECK_HEADERS([OS.h fcntl.h limits.h mach/mach.h malloc.h stddef.h stdint.h stdlib.h string.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

if test x"$enable_vpc" = x"yes"; then
  SYSTEMC_VPC_INCLUDE=" \
    -I\$(top_builddir)/../SysteMoC/include/systemoc \
    -I\$(top_builddir)/../SystemC-VPC/include/systemcvpc \
    $SYSTEMC_INCLUDE"

  SYSTEMC_VPC_LDFLAGS=" \
    -L\$(top_builddir)/../SystemC-VPC \
    -lsystemcvpc \
    $SYSTEMC_LDFLAGS"

  SYSTEMC_VPC_DEPENDENCIES=" \
    \$(top_builddir)/../SystemC-VPC/libsystemcvpc.la"

  CPPFLAGS="$CPPFLAGS -DENABLE_SYSTEMC_VPC"
else
  SYSTEMC_VPC_INCLUDE=""
  SYSTEMC_VPC_LDFLAGS=""
  SYSTEMC_VPC_DEPENDENCIES=""
fi

AC_SUBST([SYSTEMC_VPC_INCLUDE])
AC_SUBST([SYSTEMC_VPC_LDFLAGS])
AC_SUBST([SYSTEMC_VPC_DEPENDENCIES])

AC_CONFIG_FILES([Makefile])

if test -d $srcdir/systemc-df2; then
  AC_CONFIG_FILES([systemc-df2/Makefile])
  subdirs="$subdirs systemc-df2"
fi
if test -d $srcdir/systemc-sdf; then
  AC_CONFIG_FILES([systemc-sdf/Makefile])
  subdirs="$subdirs systemc-sdf"
fi

SUBDIRS=$subdirs
AC_SUBST(SUBDIRS)

ACJF_DONE

AC_OUTPUT
