
#include <callib.hpp>

class m_IDCTscale: public smoc_actor {
// The actor has 2 Ports.
public: 
   smoc_port_in<int> I;
   smoc_port_out<int> O;

// The actor has 2 Parameters and 0 Variable declarations.
private: 
   const int G;
   const int OS;
   
// The actor has 1 Actions and 0 Guards.
private:
//Insert a dummy guard called in case a state transition has neither inputs nor a guard
bool m_IDCTscale::guard_dummy(void) const {
   return ( true );
}
void m_IDCTscale::action(void) {
// The action has 0 local variable declarations.
   int i = I[0];
   O[0] = (OS + (G * i));
}

   smoc_firing_state start;
      
public:
 m_IDCTscale(sc_module_name name, int G, int OS)
 : smoc_actor(name, start), G(G), OS(OS) {
 start = 
   (I.getAvailableTokens() >= 1) >> 
   (O.getAvailableSpace() >= 1)  >>
   call(&m_IDCTscale::action) >> start;  
 }
};

