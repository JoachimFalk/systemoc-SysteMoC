## Process this file with automake to produce Makefile.in
# vim: set noet sw=2 ts=8 sts=0:
#
# Copyright (C) Joachim Falk <joachim.falk@gmx.de> $Date: 2003/01/15 16:43:20 $
#
# Makefile.am is part of the jflib distribution of Joachim Falk;
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation;
# either version 2 of the License, or (at your option) any later version.
#
# The jflib distributio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# $Log$
root_srcdir   := $(shell cd $(top_srcdir)/.. && pwd)
root_builddir := $(shell cd $(top_builddir)/.. && pwd)

include $(auxdir)/jfrules.mk

SUBDIRS=

if SYNTH_SW
  SYNTHESIS_SUBDIR = synthesis
  include $(root_builddir)/Synthesis-SW/Rules-Synth.mk
endif
if SYNTH_HW
  HWSYNTH_SUBDIR   = hwsynth
  include $(root_builddir)/Synthesis-Actor-Cynthesizer/Rules-Synth.mk
endif
if SYNTH_HWC
  HWSYNTHC_SUBDIR  = hwsynth-concurrent
  include $(root_builddir)/Synthesis-Actor-Concurrent/Rules-Synth.mk
endif
if SYNTH_SGX
  SGX_SUBDIR       = specs
  include $(root_builddir)/specGen/Rules-Synth.mk
endif
if SYNTH_TESTLIB
  TESTLIB_SUBDIR   = testlib
  include $(root_builddir)/Simulation-HW-Actor/Rules-Testlib.mk
endif

AM_LDFLAGS = @AM_LDFLAGS@  @BOOST_LDFLAGS@ @SYSTEMOC_LDFLAGS@
AM_CPPFLAGS= @AM_CPPFLAGS@ @SYSTEMOC_INCLUDE@ -I$(srcdir)/../systemoc-idct2d -Wno-deprecated

LIBS= @LIBS@ -lsystemoc

PROJECT_CPPS=HuffDecoder.cpp BitSplitter.cpp


noinst_PROGRAMS= simulation-jpeg simulation-jpeg-file parser-test huffman-test idct-fbw-test invzrl-test # idct-fsh-test

simulation_jpeg_SOURCES= Jpeg.cpp $(PROJECT_CPPS)
simulation_jpeg_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@
simulation_jpeg_CPPFLAGS= -DJPEG_SRC $(AM_CPPFLAGS)

simulation_jpeg_file_SOURCES= Jpeg.cpp $(PROJECT_CPPS)
simulation_jpeg_file_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@
simulation_jpeg_file_CPPFLAGS= -DFILE_SRC $(AM_CPPFLAGS)

parser_test_SOURCES = ParserTestbench.cpp $(PROJECT_CPPS)
parser_test_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@

huffman_test_SOURCES = HuffmanTestbench.cpp $(PROJECT_CPPS)
huffman_test_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@

idct_fbw_test_SOURCES = IDCTFrameBufferWriterTestbench.cpp $(PROJECT_CPPS)
idct_fbw_test_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@

#idct_fsh_test_SOURCES = IDCTFrameBufferWriterTestbench.cpp $(PROJECT_CPPS)
#idct_fsh_test_CPPFLAGS = $(AM_CPPFLAGS) -DSTATIC_IMAGE_SIZE
#idct_fsh_test_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@

invzrl_test_SOURCES = InvZrl_tb.cpp $(PROJECT_CPPS)
invzrl_test_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@

# autotest script is build by some source file. #! line is generated by
#  automake to guarantee proper path. Other scripting languages are easy
#  possible, too (e.g., Perl).
noinst_SCRIPTS=autotest.sh

CLEANFILES=$(noinst_SCRIPTS)

autotest.sh: simulation-jpeg $(srcdir)/autotest-sh
	rm -f $@
	echo "#!" $(BASH) > $@
	cat autovars.sh $(srcdir)/autotest-sh >> $@
	chmod +x $@

# to check we just call the 'autotest.sh' script
check: autotest.sh
	./autotest.sh

USR_DEF_SKELETONS = $(srcdir)/../systemoc-idct2d

if SYNTH_SW
synth:   $(SYNTHESIS_SUBDIR)/smoc-synth-jpeg

$(SYNTHESIS_SUBDIR)/smoc-synth-jpeg: BitSplitter.cpp
$(SYNTHESIS_SUBDIR)/smoc-testgen-jpeg: BitSplitter.cpp
$(SYNTHESIS_SUBDIR)/jpeg.ast.xml: $(simulation_jpeg_SOURCES)
.PHONY: synth
endif
if SYNTH_HW
hwsynth: $(HWSYNTH_SUBDIR)/smoc-hwsynth-all-jpeg.stamp
.PHONY: hwsynth
endif
if SYNTH_HWC
hwsynthc: $(HWSYNTHC_SUBDIR)/smoc-hwsynthc-all-jpeg.stamp
.PHONY: hwsynthc
endif
if SYNTH_TESTLIB
testlib : $(TESTLIB_SUBDIR)/all-dummies-jpeg.log
.PHONY: testlib
endif
if SYNTH_SGX
sgx:  	 $(SGX_SUBDIR)/specgraph.dtd \
	 $(SGX_SUBDIR)/jpeg.pgx \
	 $(root_builddir)/specGen/specGenDir.sh
	$(root_builddir)/specGen/specGenDir.sh \
	$(SGX_SUBDIR)/jpeg.pgx \
	$(srcdir)/specGen-mapping/ \
	${SGX_SUBDIR}

$(SGX_SUBDIR)/%.pgx: $(SYNTHESIS_SUBDIR)/%.pg.xml
	sed -e 's/networkgraph\.dtd/specgraph\.dtd/g'\
	    -e 's/networkgraph/specificationgraph/g'\
	    $^ > $@

.PHONY: sgx
endif
