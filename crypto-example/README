Dieses Szenario demonstiert eine einfache Art des RPC, in welchem ein Produzent einzelne Befehle aus einer Eingabedatei einliest und diese an einen Konsumenten weiterleitet, welcher sie auswertet und das Ergebnis wieder zurücksendet. Die Kommunikation der beiden Aktoren Produzent und Konsument erfolgt dabei verschlüsselt. Zudem wird noch jedem Packet eine Signatur hinzugefügt, welche an der Gegenstelle überprüft wird. Das gesamte Szenario ist nochmals in der Datei 'ActorEntwurf.dia' visualisiert.
Zur Befehlsinterpretation wird auf Konsumentenseite 'bc - An arbitrary precision calculator language' genutzt (siehe auch 'man bc'), woraus auch im Wesentlichen der Aufbau der Eingabedatei für den Produzenten resultiert. Die Eingabedatei stellt im wesentlichem nichts anderes als eine Liste von "bc"-konformen Befehlen dar, welche durch ein '\n' abgeschlossen werden. Zusätzlich dazu kann für die einzelnen Aufrufe die gewünschte Verschlüsselung angegeben werden. Dies geschieht durch Einfügen von '#DES#'(==DES3) bzw. '#BF#' (==Blowfish) am Anfang der Befehleszeile, sollte dies nicht erfolgen so wird standardmäßig DES3 als Verschlüsselung genutzt. Es ist ebenfalls möglich einen Befehl über mehrere Zeilen hinweg zu strukturieren, in dem man jeweils die entsprechenden Zeilen mit einem Backslash ('\') abschließt. Die Datei 'example.txt' dient als Beispiel für den Aufbau einer solchen Eingabedatei und liegt dem Archiv bei. 
Das beiliegende Binary wird durch den Aufruf "simulation-crypto <input-file>" ausgeführt, hierbei bezieht sich input-file auf die Eingabedatei für den Produzenten.
