#! /bin/sh

if test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi

# Name of the executable.
as_me=`basename "$0"`

# Where is this executable.
top_builddir=`dirname $0`; top_builddir=`cd $top_builddir; pwd`

srcdir=`cd $top_builddir; cd @srcdir@; pwd`
top_srcdir=`cd $top_builddir; cd @top_srcdir@; pwd`
stimuli_dir=$top_srcdir/crypto-example/stimuli
configuration_dir=$top_srcdir/crypto-example/config

#echo $stimuli_dir
#echo $configuration_dir

rm -f *.vcd
rm -f *.wlf
rm -f *.rt
rm -f *.log
rm -f result

#check if configuration files sepcified else set default
if test -z "$CONFIGURATIONS";
then
  CONFIGURATIONS=$( cd $configuration_dir; ls *.cmx)
fi

STIMULIS=$( cd $stimuli_dir; ls *.sti)

echo $CONFIGURATIONS

#check if RUN number specified else set default
if test -z "$RUN";
then
  RUN=10;
fi

for i in `seq 1 100`;
do
#while true;
#do
  for config in $CONFIGURATIONS
  do
    index=0

    for stimuli in $STIMULIS
    do
      # clean up
      rm -f *.vcd
      rm -f *.wlf
      rm -f *.rt
      rm -f *.log
      rm -f result
      #if test -f "gmon.out"; then
      #  rm -f gmon.out
      #fi
      
      echo VPCCONFIGURATION=$configuration_dir/$config $top_builddir/simulation-crypto $stimuli_dir/$stimuli
      exec 3>&2
      exec 2>>simtime.log
      time VPCCONFIGURATION=$configuration_dir/$config $top_builddir/simulation-crypto $stimuli_dir/$stimuli $RUN
      exec 2>&3
      echo tar czf $config-$stimuli.tgz *.vcd result simtime.log
      tar czf $config-$stimuli-vcd.tgz *.vcd result latency.log simtime.log
      chmod 664 $config-$stimuli-vcd.tgz
      # tar czf $config-$stimuli-vcd.tgz *.vcd
      # wert aus result lesen
      # read latency < result
      # echo $index $latency \# $config with $stimuli >> $config-plot.dat
      # index=$( expr $index + 1)
      # determine reconf times
      RCVCD=$(ls rc*.vcd)
      #for vcd in $RCVCD
      #do
      #  echo $srcdir/vcd_sum.pl $vcd
      #  $srcdir/vcd_sum.pl $vcd
      #done
      #if test -f "gmon.out"; then
      #  tar czf $config-$stimuli-times.tgz *.rt result latency.log simtime.log gmon.out
      #else
      tar czf $config-$stimuli-times.tgz *.rt result latency.log simtime.log
      #fi
    done
  done
  
  echo determine runtime without VPC
  for stimuli in $STIMULIS
    do
      # clean up
      rm -f *.vcd
      rm -f *.wlf
      rm -f *.rt
      rm -f *.log
      rm -f result
      #if test -f "gmon.out"; then
      #  rm -f gmon.out
      #fi
      
      echo $top_builddir/simulation-crypto $stimuli_dir/$stimuli
      exec 3>&2
      exec 2>>simtime.log
      time $top_builddir/simulation-crypto $stimuli_dir/$stimuli $RUN
      exec 2>&3
      if test -f "gmon.out"; then
      #echo tar czf NoVPC-$stimuli-times.tgz latency.log simtime.log
      #  tar czf NoVPC-$stimuli-times.tgz latency.log simtime.log gmon.out
      #else
        tar czf NoVPC-$stimuli-times.tgz latency.log simtime.log
      #fi
      chmod 664 NoVPC-$stimuli-times.tgz
      # tar czf $config-$stimuli-vcd.tgz *.vcd
      # wert aus result lesen
      # read latency < result
      # echo $index $latency \# NoVPC with $stimuli >> NoVPC-plot.dat
    done 
    
  $builddir/dat2plot.pl
  mkdir -p /scratch-local/riedel/RUN-$RUN-$i
  mv *tgz *dat /scratch-local/riedel/RUN-$RUN-$i
  #let "RUN=$RUN * 10"
 
  # clean up
  rm -f *.vcd
  rm -f *.wlf
  rm -f *.rt
  rm -f *.log
  rm -f result

done
