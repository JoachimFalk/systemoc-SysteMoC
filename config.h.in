/* config.h.in.  Generated from configure.in by autoheader.  */

/* vim: set sw=2 ts=8 syn=c: */

#ifndef _INCLUDED_CONFIG_H
#define _INCLUDED_CONFIG_H


/* have neither va_copy nor __va_copy than define this and pray */
#undef DO_VA_PTR_COPY

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* define if you have the 'int16_t' type */
#undef HAVE_INT16_T

/* define if you have the 'int32_t' type */
#undef HAVE_INT32_T

/* define if you have the 'int64_t' type */
#undef HAVE_INT64_T

/* define if you have the 'int8_t' type */
#undef HAVE_INT8_T

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* define if you have the 'long long' type */
#undef HAVE_LONG_LONG

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* define if you have the 'size_t' type */
#undef HAVE_SIZE_T

/* define if you have the 'ssize_t' type */
#undef HAVE_SSIZE_T

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Do we have va_copy in stdarg.h than define this */
#undef HAVE_VA_COPY

/* Do we have __va_copy in stdarg.h than define this */
#undef HAVE___VA_COPY

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of `char', as computed by sizeof. */
#undef SIZEOF_CHAR

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `size_t', as computed by sizeof. */
#undef SIZEOF_SIZE_T

/* The size of `ssize_t', as computed by sizeof. */
#undef SIZEOF_SSIZE_T

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* define this to your size_t type if you dont have one predefined */
#undef size_t

/* define this to your ssize_t type if you dont have one predefined */
#undef ssize_t

/*
 * NOTE: Some routine need va_copy() from stdarg.h, as
 * specified by C9X, to be able to traverse the same list of arguments twice.
 * I don't know of any other standard and portable way of achieving the same.
 * With some versions of gcc you may use __va_copy(). You might even get away
 * with "ap2 = ap", in this case it may not be safe to call va_end(ap2) !
 */
#ifdef HAVE_VA_COPY
 /* dito have it */
#else
# if HAVE___VA_COPY
#   define va_copy( dest, src ) __va_copy( dest, src )
# else
#   if DO_VA_PTR_COPY
#     define va_copy( dest, src ) do { dest = src; } while ( 0 )
#   else
      /* fuck what now ? */
#   endif
# endif
#endif

#endif /* _INCLUDED_CONFIG_H */

